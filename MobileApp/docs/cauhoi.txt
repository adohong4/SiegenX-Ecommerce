phương thức get trên postman
http://localhost:4001/v1/api/product/campaign/updateProductPrice
kết quả body json trả vê:
{"status":201,"message":"Thông tin sản phẩm sau update","metadata":{"updatedProducts":[{"_id":"676b7ebd899914bf0bea74e0","title":"Màn Hình Quảng Cáo All-In-One Chân Quỳ SIEGenX 65 Inch SGX-65CQ","nameProduct":"Màn Hình Quảng Cáo All-In-One Chân Quỳ SIEGenX 65 Inch SGX-65CQ","product_slug":"man-hinh-quang-cao-all-in-one-chan-quy-siegenx-65-inch-sgx-65cq","price":5000000,"images":["17350980453801.2-600x583 (1).png","17350980453821.2-600x583.png","17350980453851.3-600x800.png"],"category":"MH quảng cáo LCD","quantity":10,"newPrice":4000000},{"_id":"676b7e07899914bf0bea74db","title":"Màn Hình Tương Tác Thông Minh SIEGenX 55 inch 4K (tích hợp Camera + Micro) SGX – T55","nameProduct":"Màn Hình Tương Tác Thông Minh SIEGenX 55 inch 4K (tích hợp Camera + Micro) SGX – T55","product_slug":"man-hinh-tuong-tac-thong-minh-siegenx-55-inch-4k-(tich-hop-camera-+-micro)-sgx-t55","price":11582999.19,"images":["17350978635234-600x654.png","1735097863526man4.jpg","1735097863526man3.jpg"],"category":"Màn hình LED","quantity":12,"newPrice":null},{"_id":"67696a18e7ee9e89c3b45e5c","title":" Màn Hình LCD Dạng Ghép SIEGenX 49 Inch SGX-49GE","nameProduct":" Màn Hình LCD Dạng Ghép SIEGenX 49 Inch SGX-49GE","product_slug":"man-hinh-lcd-dang-ghep-siegenx-49-inch-sgx-49ge","price":9760000,"images":["1734961688322man1.png","1734961688359man2.png","1734961688382man3.png"],"category":"Quảng cáo 3D (OOH)","quantity":13,"newPrice":8760000},{"_id":"676968fde7ee9e89c3b45e54","title":"Màn Hình Quảng Cáo Trong Nhà Dạng Đứng 2 Mặt SIEGenX 55 Inch SGX-55D","nameProduct":"Màn Hình Quảng Cáo Trong Nhà Dạng Đứng 2 Mặt SIEGenX 55 Inch SGX-55D","product_slug":"man-hinh-quang-cao-trong-nha-dang-djung-2-mat-siegenx-55-inch-sgx-55d","price":15471000,"images":["1734961405188man1.png","1734961405191man2.png","1734961405193man3.png"],"category":"Quảng cáo 3D (OOH)","quantity":11,"newPrice":null},{"_id":"676967efe7ee9e89c3b45e4c","title":"Màn Hình Tương Tác Thông Minh SIEGenX 98 inch 4K (tích hợp Camera + Micro) SGX – T98","nameProduct":"Màn Hình Tương Tác Thông Minh SIEGenX 98 inch 4K (tích hợp Camera + Micro) SGX – T98","product_slug":"man-hinh-tuong-tac-thong-minh-siegenx-98-inch-4k-(tich-hop-camera-+-micro)-sgx-t98","price":13000500,"images":["1734961135519man2.png","1734961135522man1.png","1734961135526man4.jpg","1734961135526man3.jpg"],"category":"MH tương tác","quantity":12,"newPrice":null},{"_id":"6769663ae7ee9e89c3b45e3f","title":"Màn Hình Tương Tác Thông Minh SIEGenX 65 inch 4K (tích hợp Camera + Micro) SGX – T65","nameProduct":"Màn Hình Tương Tác Thông Minh SIEGenX 65 inch 4K (tích hợp Camera + Micro) SGX – T65","product_slug":"man-hinh-tuong-tac-thong-minh-siegenx-65-inch-4k-(tich-hop-camera-+-micro)-sgx-t65","price":11178000,"images":["1734960698587man1.png","1734960698582man3.jpg","1734960698582man2.png","1734960698581man4.jpg"],"category":"MH tương tác","quantity":14,"newPrice":null},{"_id":"6769645ce7ee9e89c3b45e2f","title":"Màn Hình Di Động Thông Minh SIEGenX 24 inch","nameProduct":"Màn Hình Di Động Thông Minh SIEGenX 24 inch","product_slug":"man-hinh-di-djong-thong-minh-siegenx-24-inch","price":3483000,"images":["1734960220978man1.png","1734960220981man3.png","1734960220983man2.png"],"category":"KTV 5D","quantity":13,"newPrice":null},{"_id":"676963e0e7ee9e89c3b45e2d","title":"Màn Hình Di Động Thông Minh SIEGenX 27 inch","nameProduct":"Màn Hình Di Động Thông Minh SIEGenX 27 inch","product_slug":"man-hinh-di-djong-thong-minh-siegenx-27-inch","price":3100000,"images":["1734960096906man1.png","1734960096904man2.png","1734960096903man3.png"],"category":"KTV 5D","quantity":10,"newPrice":null},{"_id":"6769509216ebd4be548c5302","title":"Màn Hình LED Trong Nhà SIEGenX KXS40N SGX-KXS40N","nameProduct":"Màn Hình LED Trong Nhà SIEGenX KXS40N SGX-KXS40N","product_slug":"man-hinh-led-trong-nha-siegenx-kxs40n-sgx-kxs40n","price":1800000,"images":["1734955154615man3.png","1734955154617man2.png","1734955154621man1.png"],"category":"Màn hình LED","quantity":15,"newPrice":null}],"campaignType":"percentage","campaignValue":20,"totalProduct":9}}
--------------------------
import 'package:flutter/material.dart';
import 'package:siegenx_mobile_app/controllers/favorite_icon.dart';
import 'package:siegenx_mobile_app/models/product.dart';
import 'package:siegenx_mobile_app/services/product_service.dart';
import 'package:siegenx_mobile_app/utils/format_untils.dart';
import 'package:siegenx_mobile_app/utils/dialog_utils.dart';
import 'package:siegenx_mobile_app/widgets/product_detail.dart';
import 'package:siegenx_mobile_app/services/api_service.dart';

class ProductGrid extends StatelessWidget {
  const ProductGrid({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 16.0),
      child: FutureBuilder<List<Product>>(
        future: ProductService.fetchAllProducts(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError) {
            return Center(child: Text('Error: ${snapshot.error}'));
          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {
            return Center(child: Text('No products found'));
          }

          final products = snapshot.data!;
          return LayoutBuilder(
            builder: (context, constraints) {
              int crossAxisCount = (constraints.maxWidth ~/ 150).clamp(2, 4);

              return GridView.builder(
                shrinkWrap: true,
                physics: NeverScrollableScrollPhysics(),
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: crossAxisCount,
                  crossAxisSpacing: 16,
                  mainAxisSpacing: 16,
                  childAspectRatio: 0.65,
                ),
                itemCount: products.length,
                itemBuilder: (context, index) {
                  final product = products[index];

                  return GestureDetector(
                    onLongPress: () {
                      showProductDialog(context, product);
                    },
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) =>
                              ProductDetailScreen(product: product),
                        ),
                      );
                    },
                    child: IntrinsicHeight(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          Stack(
                            children: [
                              Container(
                                decoration: BoxDecoration(
                                  color: Color(0xFFF2F3F4),
                                  borderRadius: BorderRadius.circular(10),
                                ),
                                child: Padding(
                                  padding: EdgeInsets.all(5),
                                  child: ClipRRect(
                                    borderRadius: BorderRadius.circular(10),
                                    child: Image.network(
                                      '${ApiService.imageBaseUrl}${product.imageUrl[0]}',
                                      width: double.infinity,
                                      height: 160,
                                      fit: BoxFit.cover,
                                      errorBuilder:
                                          (context, error, stackTrace) => Icon(
                                        Icons.error,
                                        color: Colors.red,
                                        size: 120,
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                              Positioned(
                                top: 8,
                                right: 8,
                                child: Container(
                                  width: 30,
                                  height: 30,
                                  decoration: BoxDecoration(
                                    color: Color(0xFFF2F3F4),
                                    borderRadius: BorderRadius.circular(6),
                                  ),
                                  child: IconButton(
                                    padding: EdgeInsets.zero,
                                    icon: Icon(
                                      Icons.add_shopping_cart_rounded,
                                      color: Colors.black,
                                      size: 18,
                                    ),
                                    onPressed: () {
                                      // TODO: Thêm chức năng thêm vào giỏ hàng
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          SizedBox(height: 5),
                          Padding(
                            padding: EdgeInsets.symmetric(horizontal: 8.0),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                Text(
                                  formatCurrency(product.price),
                                  style: TextStyle(
                                    fontSize: 15,
                                    color: Color(0xFF00B98E),
                                  ),
                                ),
                                FavoriteIcon(productId: product.id),
                              ],
                            ),
                          ),
                          Padding(
                            padding: EdgeInsets.symmetric(horizontal: 8.0),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              children: [
                                Text(
                                  'Số lượng: ${product.quantity}',
                                  style: TextStyle(
                                    fontSize: 12,
                                    color: Colors.black54,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Flexible(
                            child: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 8.0),
                              child: Text(
                                product.name,
                                style: TextStyle(
                                  fontSize: 14,
                                  fontWeight: FontWeight.w500,
                                  color: Colors.black,
                                ),
                                maxLines: 2,
                                overflow: TextOverflow.ellipsis,
                                textAlign: TextAlign.start,
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  );
                },
              );
            },
          );
        },
      ),
    );
  }
}
-------------------------------------------------------------------------------------------
class Product {
  final int id;
  final String name;
  final int price; // Giá hiện tại
  final String description;
  final bool isFavorite;
  final List<String> imageUrl;
  final int quantity; // Số lượng hàng

  Product({
    required this.id,
    required this.name,
    required this.price,
    required this.description,
    required this.isFavorite,
    required this.imageUrl,
    required this.quantity, // Đổi thành required vì luôn có trong API getAll
  });

  // Factory constructor để parse JSON
  factory Product.fromJson(Map<String, dynamic> json) {
    return Product(
      id: int.parse(json['_id'].substring(0, 8), radix: 16),
      name: json['title'] as String,
      price: (json['price'] as num).round(), // Giá hiện tại
      description: json['title'] as String,
      isFavorite: false,
      imageUrl: List<String>.from(json['images'] as List),
      quantity: json['quantity'] as int, // Lấy số lượng từ API
    );
  }
}

-------------------------------------------------------------
class ApiService {
  static const String baseUrl = "http://localhost:4001/v1/api";
  static const String imageBaseUrl = "http://localhost:9003/images/";

  static const String identity = "$baseUrl/identity";
  static const String profile = "$baseUrl/profile";
  static const String product = "$baseUrl/product";
  static const String contact = "$baseUrl/contact";

  static const String login = "$identity/login";
  static const String register = "$identity/register";
  static const String userProfile = "$profile/getProfile";
  static const String productList = "$product/list";
  static const String contactSupport = "$contact/support";
  static const String addAddress = "$profile/address/create";
  static const String listAddresses = "$profile/address/getList";
  static const String logout = "$identity/logout";
  static const String deleteAddress = "$profile/address/delete";

  static const String getAllProducts = "$product/getAll";
  static const String updateProfile = "$profile/update";
}

-------------------------------------------------------------------------------------------
tôi cần sửa trong productgrid này, thay vì lấy api http://localhost:4001/v1/api/product/paginate?page=1&limit=3
thì thay bằng luôn bằng api http://localhost:4001/v1/api/product/campaign/updateProductPrice
- nếu cái nào không có thì vẫn hiển thị giá như ban đầu
- còn nếu có "newPrice" thì nó sẽ ưu cho hiển thị giá của new price
 và price sẽ hiển thị chữ xám bên dưới, kích thước nhỏ hơn và gạch ngang, nằm ngay bên dưới giá new price
nói đơn giản giống như là bán hàng trên sàn thương mại điện tử, nếu có giảm giá thì hiển thị giá mới đã giảm, còn nếu không có thì vẫn hiện giá cũ



----------------------
----------------------
---------------------
---------------------
----------------------

phương thức get trên postman
http://localhost:4001/v1/api/product/campaign/updateProductPrice
kết quả body json trả vê:
{"status":201,"message":"Thông tin sản phẩm sau update","metadata":{"updatedProducts":[{"_id":"676b7ebd899914bf0bea74e0","title":"Màn Hình Quảng Cáo All-In-One Chân Quỳ SIEGenX 65 Inch SGX-65CQ","nameProduct":"Màn Hình Quảng Cáo All-In-One Chân Quỳ SIEGenX 65 Inch SGX-65CQ","product_slug":"man-hinh-quang-cao-all-in-one-chan-quy-siegenx-65-inch-sgx-65cq","price":5000000,"images":["17350980453801.2-600x583 (1).png","17350980453821.2-600x583.png","17350980453851.3-600x800.png"],"category":"MH quảng cáo LCD","quantity":10,"newPrice":4000000},{"_id":"676b7e07899914bf0bea74db","title":"Màn Hình Tương Tác Thông Minh SIEGenX 55 inch 4K (tích hợp Camera + Micro) SGX – T55","nameProduct":"Màn Hình Tương Tác Thông Minh SIEGenX 55 inch 4K (tích hợp Camera + Micro) SGX – T55","product_slug":"man-hinh-tuong-tac-thong-minh-siegenx-55-inch-4k-(tich-hop-camera-+-micro)-sgx-t55","price":11582999.19,"images":["17350978635234-600x654.png","1735097863526man4.jpg","1735097863526man3.jpg"],"category":"Màn hình LED","quantity":12,"newPrice":null},{"_id":"67696a18e7ee9e89c3b45e5c","title":" Màn Hình LCD Dạng Ghép SIEGenX 49 Inch SGX-49GE","nameProduct":" Màn Hình LCD Dạng Ghép SIEGenX 49 Inch SGX-49GE","product_slug":"man-hinh-lcd-dang-ghep-siegenx-49-inch-sgx-49ge","price":9760000,"images":["1734961688322man1.png","1734961688359man2.png","1734961688382man3.png"],"category":"Quảng cáo 3D (OOH)","quantity":13,"newPrice":8760000},{"_id":"676968fde7ee9e89c3b45e54","title":"Màn Hình Quảng Cáo Trong Nhà Dạng Đứng 2 Mặt SIEGenX 55 Inch SGX-55D","nameProduct":"Màn Hình Quảng Cáo Trong Nhà Dạng Đứng 2 Mặt SIEGenX 55 Inch SGX-55D","product_slug":"man-hinh-quang-cao-trong-nha-dang-djung-2-mat-siegenx-55-inch-sgx-55d","price":15471000,"images":["1734961405188man1.png","1734961405191man2.png","1734961405193man3.png"],"category":"Quảng cáo 3D (OOH)","quantity":11,"newPrice":null},{"_id":"676967efe7ee9e89c3b45e4c","title":"Màn Hình Tương Tác Thông Minh SIEGenX 98 inch 4K (tích hợp Camera + Micro) SGX – T98","nameProduct":"Màn Hình Tương Tác Thông Minh SIEGenX 98 inch 4K (tích hợp Camera + Micro) SGX – T98","product_slug":"man-hinh-tuong-tac-thong-minh-siegenx-98-inch-4k-(tich-hop-camera-+-micro)-sgx-t98","price":13000500,"images":["1734961135519man2.png","1734961135522man1.png","1734961135526man4.jpg","1734961135526man3.jpg"],"category":"MH tương tác","quantity":12,"newPrice":null},{"_id":"6769663ae7ee9e89c3b45e3f","title":"Màn Hình Tương Tác Thông Minh SIEGenX 65 inch 4K (tích hợp Camera + Micro) SGX – T65","nameProduct":"Màn Hình Tương Tác Thông Minh SIEGenX 65 inch 4K (tích hợp Camera + Micro) SGX – T65","product_slug":"man-hinh-tuong-tac-thong-minh-siegenx-65-inch-4k-(tich-hop-camera-+-micro)-sgx-t65","price":11178000,"images":["1734960698587man1.png","1734960698582man3.jpg","1734960698582man2.png","1734960698581man4.jpg"],"category":"MH tương tác","quantity":14,"newPrice":null},{"_id":"6769645ce7ee9e89c3b45e2f","title":"Màn Hình Di Động Thông Minh SIEGenX 24 inch","nameProduct":"Màn Hình Di Động Thông Minh SIEGenX 24 inch","product_slug":"man-hinh-di-djong-thong-minh-siegenx-24-inch","price":3483000,"images":["1734960220978man1.png","1734960220981man3.png","1734960220983man2.png"],"category":"KTV 5D","quantity":13,"newPrice":null},{"_id":"676963e0e7ee9e89c3b45e2d","title":"Màn Hình Di Động Thông Minh SIEGenX 27 inch","nameProduct":"Màn Hình Di Động Thông Minh SIEGenX 27 inch","product_slug":"man-hinh-di-djong-thong-minh-siegenx-27-inch","price":3100000,"images":["1734960096906man1.png","1734960096904man2.png","1734960096903man3.png"],"category":"KTV 5D","quantity":10,"newPrice":null},{"_id":"6769509216ebd4be548c5302","title":"Màn Hình LED Trong Nhà SIEGenX KXS40N SGX-KXS40N","nameProduct":"Màn Hình LED Trong Nhà SIEGenX KXS40N SGX-KXS40N","product_slug":"man-hinh-led-trong-nha-siegenx-kxs40n-sgx-kxs40n","price":1800000,"images":["1734955154615man3.png","1734955154617man2.png","1734955154621man1.png"],"category":"Màn hình LED","quantity":15,"newPrice":null}],"campaignType":"percentage","campaignValue":20,"totalProduct":9}}
--------------------------
import 'package:flutter/material.dart';
import 'package:siegenx_mobile_app/controllers/favorite_icon.dart';
import 'package:siegenx_mobile_app/models/product.dart';
import 'package:siegenx_mobile_app/services/product_service.dart';
import 'package:siegenx_mobile_app/utils/format_untils.dart';
import 'package:siegenx_mobile_app/utils/dialog_utils.dart';
import 'package:siegenx_mobile_app/widgets/product_detail.dart';
import 'package:siegenx_mobile_app/services/api_service.dart';

class ProductGrid extends StatelessWidget {
  const ProductGrid({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 16.0),
      child: FutureBuilder<List<Product>>(
        future: ProductService.fetchAllProducts(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError) {
            return Center(child: Text('Error: ${snapshot.error}'));
          } else if (!snapshot.hasData || snapshot.data!.isEmpty) {
            return Center(child: Text('No products found'));
          }

          final products = snapshot.data!;
          return LayoutBuilder(
            builder: (context, constraints) {
              int crossAxisCount = (constraints.maxWidth ~/ 150).clamp(2, 4);

              return GridView.builder(
                shrinkWrap: true,
                physics: NeverScrollableScrollPhysics(),
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: crossAxisCount,
                  crossAxisSpacing: 16,
                  mainAxisSpacing: 16,
                  childAspectRatio: 0.65,
                ),
                itemCount: products.length,
                itemBuilder: (context, index) {
                  final product = products[index];

                  return GestureDetector(
                    onLongPress: () {
                      showProductDialog(context, product);
                    },
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) =>
                              ProductDetailScreen(product: product),
                        ),
                      );
                    },
                    child: IntrinsicHeight(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          Stack(
                            children: [
                              Container(
                                decoration: BoxDecoration(
                                  color: Color(0xFFF2F3F4),
                                  borderRadius: BorderRadius.circular(10),
                                ),
                                child: Padding(
                                  padding: EdgeInsets.all(5),
                                  child: ClipRRect(
                                    borderRadius: BorderRadius.circular(10),
                                    child: Image.network(
                                      '${ApiService.imageBaseUrl}${product.imageUrl[0]}',
                                      width: double.infinity,
                                      height: 160,
                                      fit: BoxFit.cover,
                                      errorBuilder:
                                          (context, error, stackTrace) => Icon(
                                        Icons.error,
                                        color: Colors.red,
                                        size: 120,
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                              Positioned(
                                top: 8,
                                right: 8,
                                child: Container(
                                  width: 30,
                                  height: 30,
                                  decoration: BoxDecoration(
                                    color: Color(0xFFF2F3F4),
                                    borderRadius: BorderRadius.circular(6),
                                  ),
                                  child: IconButton(
                                    padding: EdgeInsets.zero,
                                    icon: Icon(
                                      Icons.add_shopping_cart_rounded,
                                      color: Colors.black,
                                      size: 18,
                                    ),
                                    onPressed: () {
                                      // TODO: Thêm chức năng thêm vào giỏ hàng
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          SizedBox(height: 5),
                          // Phần hiển thị giá
                          Padding(
                            padding: EdgeInsets.symmetric(horizontal: 8.0),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                Text(
                                  product.newPrice != null
                                      ? formatCurrency(product.newPrice!)
                                      : formatCurrency(product.price),
                                  style: TextStyle(
                                    fontSize: 15,
                                    color: Color(0xFF00B98E),
                                  ),
                                ),
                                FavoriteIcon(productId: product.id),
                              ],
                            ),
                          ),

// Phần thay thế số lượng bằng giá cũ
                          Padding(
                            padding: EdgeInsets.symmetric(horizontal: 8.0),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              children: [
                                if (product.newPrice != null)
                                  Text(
                                    formatCurrency(product.price),
                                    style: TextStyle(
                                      fontSize: 12,
                                      color: Colors.grey,
                                      decoration: TextDecoration.lineThrough,
                                    ),
                                  )
                                else
                                  Text(
                                    'Số lượng: ${product.quantity}',
                                    style: TextStyle(
                                      fontSize: 12,
                                      color: Colors.black54,
                                    ),
                                  ),
                              ],
                            ),
                          ),
                          Flexible(
                            child: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 8.0),
                              child: Text(
                                product.name,
                                style: TextStyle(
                                  fontSize: 14,
                                  fontWeight: FontWeight.w500,
                                  color: Colors.black,
                                ),
                                maxLines: 2,
                                overflow: TextOverflow.ellipsis,
                                textAlign: TextAlign.start,
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  );
                },
              );
            },
          );
        },
      ),
    );
  }
}
-------------------
import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:siegenx_mobile_app/models/product.dart';
import 'package:siegenx_mobile_app/services/api_service.dart';

class ProductService {
  // Lấy tất cả sản phẩm từ API getAll
  static Future<List<Product>> fetchAllProducts() async {
    final response = await http.get(Uri.parse(ApiService.getCampaignProducts));

    if (response.statusCode == 200) {
      final data = jsonDecode(response.body);
      final List<dynamic> productsJson = data['metadata'];
      return productsJson.map((json) => Product.fromJson(json)).toList();
    } else {
      throw Exception('Failed to load products');
    }
  }
}

--------------------
class ApiService {
  static const String baseUrl = "http://localhost:4001/v1/api";
  static const String imageBaseUrl = "http://localhost:9003/images/";

  static const String identity = "$baseUrl/identity";
  static const String profile = "$baseUrl/profile";
  static const String product = "$baseUrl/product";
  static const String contact = "$baseUrl/contact";

  static const String login = "$identity/login";
  static const String register = "$identity/register";
  static const String userProfile = "$profile/getProfile";
  static const String productList = "$product/list";
  static const String contactSupport = "$contact/support";
  static const String addAddress = "$profile/address/create";
  static const String listAddresses = "$profile/address/getList";
  static const String logout = "$identity/logout";
  static const String deleteAddress = "$profile/address/delete";

  static const String getAllProducts = "$product/getAll";
  static const String updateProfile = "$profile/update";
  static const String getCampaignProducts =
      "$product/campaign/updateProductPrice";
}

tôi đang bị lỗi ở trang chủ của tôi không hiển thị sản phẩm mà nó báo lỗi
Error: Exception: failed to load products